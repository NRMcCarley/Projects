# -*- coding: utf-8 -*-
"""Markov Cash Valuation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jm1kVLBN7EWcZJXFFIkAI85JO1KYGfVi
"""

import numpy as np

T = np.array([[1.0, 2.0, 0.2],
              [0.5, 1.0, 1/9],
              [5.0, 9., 1.0]])

W = np.zeros((3, 3))
col = 0
while col < 3:
  temp = (1 / np.sum(T[:, col])) * T[:, col]
  W[:, col] = temp
  col += 1

x = np.array([[1],
              [0],
              [0]])
print(W)
impliedShare = np.reshape(np.diag(W), (3, 1))
print(impliedShare)

i = 0
while i < 100:
  xnext = np.dot(W, x)
  x = xnext
  i += 1
print(x)
print(f"True - Implied =")
print(x - impliedShare)

c_0 = np.array([[0],
               [1],
               [0]])
Trade1 = np.array([[0, 0, 0],
                   [0, 0, 0],
                   [0, 1, 0]])
Trade2 = np.array([[0, 0, 1],
                   [1, 0, 0],
                   [0, 1, 0]])
Trade3 = np.array([[0, 0, 1],
                   [1, 0, 0],
                   [0, 1, 0]])
firstTrade = (Trade1 * T)
secondTrade = (Trade2 * T)
thirdTrade = (Trade3 * T)

c_1 = firstTrade @ c_0
c_2 = secondTrade @ c_1
c_3 = thirdTrade @ c_2

print(f"Starting: \n{c_0}")
print(f"Ending: \n{c_3}")
print(f"Profit: {c_3[1, 0] - c_0[1, 0]} of Currency 2")

